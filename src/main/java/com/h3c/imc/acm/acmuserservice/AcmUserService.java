package com.h3c.imc.acm.acmuserservice;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2013-08-03T14:09:57.133+08:00
 * Generated source version: 2.7.6
 * 
 */
@WebServiceClient(name = "acmUserService", 
                  wsdlLocation = "http://wwwgongyu.oicp.net:88/imcws/services/acmUserService?wsdl",
                  targetNamespace = "http://acm.imc.h3c.com/acmUserService") 
public class AcmUserService extends Service {

    public final static QName SERVICE = new QName("http://acm.imc.h3c.com/acmUserService", "acmUserService");
    public final static QName AcmUserServiceHttpSoap11Endpoint = new QName("http://acm.imc.h3c.com/acmUserService", "acmUserServiceHttpSoap11Endpoint");
    public final static QName AcmUserServiceHttpSoap12Endpoint = new QName("http://acm.imc.h3c.com/acmUserService", "acmUserServiceHttpSoap12Endpoint");
    public final static QName AcmUserServiceHttpEndpoint = new QName("http://acm.imc.h3c.com/acmUserService", "acmUserServiceHttpEndpoint");

    public AcmUserService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AcmUserService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }


    /**
     *
     * @return
     *     returns AcmUserServicePortType
     */
    @WebEndpoint(name = "acmUserServiceHttpSoap11Endpoint")
    public AcmUserServicePortType getAcmUserServiceHttpSoap11Endpoint() {
        return super.getPort(AcmUserServiceHttpSoap11Endpoint, AcmUserServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AcmUserServicePortType
     */
    @WebEndpoint(name = "acmUserServiceHttpSoap11Endpoint")
    public AcmUserServicePortType getAcmUserServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(AcmUserServiceHttpSoap11Endpoint, AcmUserServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns AcmUserServicePortType
     */
    @WebEndpoint(name = "acmUserServiceHttpSoap12Endpoint")
    public AcmUserServicePortType getAcmUserServiceHttpSoap12Endpoint() {
        return super.getPort(AcmUserServiceHttpSoap12Endpoint, AcmUserServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AcmUserServicePortType
     */
    @WebEndpoint(name = "acmUserServiceHttpSoap12Endpoint")
    public AcmUserServicePortType getAcmUserServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(AcmUserServiceHttpSoap12Endpoint, AcmUserServicePortType.class, features);
    }
    /**
     *
     * @return
     *     returns AcmUserServicePortType
     */
    @WebEndpoint(name = "acmUserServiceHttpEndpoint")
    public AcmUserServicePortType getAcmUserServiceHttpEndpoint() {
        return super.getPort(AcmUserServiceHttpEndpoint, AcmUserServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AcmUserServicePortType
     */
    @WebEndpoint(name = "acmUserServiceHttpEndpoint")
    public AcmUserServicePortType getAcmUserServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(AcmUserServiceHttpEndpoint, AcmUserServicePortType.class, features);
    }

}
